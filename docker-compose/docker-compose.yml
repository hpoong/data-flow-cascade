services:
  # ---------------- Kafka & Zookeeper ----------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: data-flow-cascade-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks: [dev-net]

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: data-flow-cascade-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - data-flow-cascade-kafka-data:/var/lib/kafka/data
    networks: [dev-net]



  # ---------------- connect ----------------
  connect:
    image: debezium-connect-jdbc-sink:2.4
    container_name: data-flow-cascade-connect
    depends_on: [ kafka ]
    ports: [ "8083:8083" ]
    environment:
      BOOTSTRAP_SERVERS: "kafka:29092"
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      CONFIG_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      OFFSET_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      STATUS_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    networks: [ dev-net ]

# ---------------- Set ----------------
volumes:
  data-flow-cascade-kafka-data:

networks:
  dev-net:
    driver: bridge