services:
  # ---------------- Kafka & Zookeeper ----------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: data-flow-cascade-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks: [dev-net]

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: data-flow-cascade-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - data-flow-cascade-kafka-data:/var/lib/kafka/data
    networks: [dev-net]



  # ---------------- PostgreSQL ----------------
#  postgres:
#    image: postgres:15
#    container_name: data-flow-cascade-postgres
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#      POSTGRES_DB: main
#    command:
#      - "postgres"
#      - "-c"
#      - "wal_level=logical"
#      - "-c"
#      - "max_wal_senders=10"
#      - "-c"
#      - "max_replication_slots=10"
#      - "-c"
#      - "max_worker_processes=10"
#    volumes:
#      - ./postgresql-data:/var/lib/postgresql/data
#    networks: [dev-net]


  # ---------------- connect ----------------
  connect:
    image: debezium/connect:2.4
    container_name: data-flow-cascade-connect
    depends_on: [ kafka ]
    ports: [ "8083:8083" ]
    environment:
      BOOTSTRAP_SERVERS: "kafka:29092"
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      CONFIG_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      OFFSET_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      STATUS_STORAGE_REPLICATION_FACTOR: "1"       # ← 추가
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    networks: [ dev-net ]

  debezium-ui:
    image: debezium/debezium-ui:2.4
    container_name: data-flow-cascade-debezium-ui
    depends_on: [connect]
    ports: ["8080:8080"]
    environment:
      KAFKA_CONNECT_URIS: "http://connect:8083"
    networks: [dev-net]

# ---------------- Set ----------------
volumes:
  data-flow-cascade-kafka-data:

networks:
  dev-net:
    driver: bridge